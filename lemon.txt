import tkinter as tk
import threading
import keyboard
import time
import random
import queue
import winsound  # Windows only

running = True
msg_queue = queue.Queue()

messages = [
    "Haha, still here!",
    "Lemon strikes again!",
    "You can't click fast enough!",
    "Escape is futile.",
    "alt+f4 won't help you ðŸ˜ˆ",
    "revenge ðŸ’¥",
    "FLASHBANG INCOMING ðŸ’¡"
]

# Setup root to get screen dimensions
root = tk.Tk()
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()
root.withdraw()

# Thread: Push messages into queue
def spam_messages():
    while running:
        for _ in range(random.randint(2, 4)):
            msg = random.choice(messages)
            msg_queue.put(msg)
        time.sleep(0.5)

# Thread: Stop on Alt+F1
def listen_for_stop():
    global running
    keyboard.wait('alt+f1')
    running = False
    print("Stopped by Alt+F1")

# Flash the window background
def flash_window(popup):
    colors = ["black", "yellow"]
    def cycle(i=0):
        if running and popup.winfo_exists():
            popup.configure(bg=colors[i % len(colors)])
            popup.after(200, cycle, i + 1)
    cycle()

# Show custom popup at random location with sound and flash
def show_popup(msg):
    popup = tk.Toplevel()
    popup.title("ðŸ’¥ ALERT ðŸ’¥")
    x = random.randint(0, screen_width - 250)
    y = random.randint(0, screen_height - 100)
    popup.geometry(f"250x100+{x}+{y}")
    popup.configure(bg="black")

    label = tk.Label(popup, text=msg, fg="yellow", bg="black", font=("Arial", 12, "bold"))
    label.pack(expand=True)

    # Flashing and sound
    flash_window(popup)
    threading.Thread(target=lambda: winsound.Beep(random.randint(400, 1000), 300), daemon=True).start()

    popup.after(3000, popup.destroy)

# Handle message queue in main thread
def process_popups():
    if not msg_queue.empty():
        msg = msg_queue.get()
        show_popup(msg)
    if running:
        root.after(100, process_popups)
    else:
        root.destroy()

# Start threads
threading.Thread(target=spam_messages, daemon=True).start()
threading.Thread(target=listen_for_stop, daemon=True).start()

# Start GUI loop
root.after(100, process_popups)
root.mainloop()
